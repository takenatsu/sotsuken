// Generated by gencpp from file my_service/Wheel.msg
// DO NOT EDIT!


#ifndef MY_SERVICE_MESSAGE_WHEEL_H
#define MY_SERVICE_MESSAGE_WHEEL_H

#include <ros/service_traits.h>


#include <my_service/WheelRequest.h>
#include <my_service/WheelResponse.h>


namespace my_service
{

struct Wheel
{

typedef WheelRequest Request;
typedef WheelResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Wheel
} // namespace my_service


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::my_service::Wheel > {
  static const char* value()
  {
    return "ef11d1e759e69b1c0c4a1abd582c4abd";
  }

  static const char* value(const ::my_service::Wheel&) { return value(); }
};

template<>
struct DataType< ::my_service::Wheel > {
  static const char* value()
  {
    return "my_service/Wheel";
  }

  static const char* value(const ::my_service::Wheel&) { return value(); }
};


// service_traits::MD5Sum< ::my_service::WheelRequest> should match 
// service_traits::MD5Sum< ::my_service::Wheel > 
template<>
struct MD5Sum< ::my_service::WheelRequest>
{
  static const char* value()
  {
    return MD5Sum< ::my_service::Wheel >::value();
  }
  static const char* value(const ::my_service::WheelRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::my_service::WheelRequest> should match 
// service_traits::DataType< ::my_service::Wheel > 
template<>
struct DataType< ::my_service::WheelRequest>
{
  static const char* value()
  {
    return DataType< ::my_service::Wheel >::value();
  }
  static const char* value(const ::my_service::WheelRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::my_service::WheelResponse> should match 
// service_traits::MD5Sum< ::my_service::Wheel > 
template<>
struct MD5Sum< ::my_service::WheelResponse>
{
  static const char* value()
  {
    return MD5Sum< ::my_service::Wheel >::value();
  }
  static const char* value(const ::my_service::WheelResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::my_service::WheelResponse> should match 
// service_traits::DataType< ::my_service::Wheel > 
template<>
struct DataType< ::my_service::WheelResponse>
{
  static const char* value()
  {
    return DataType< ::my_service::Wheel >::value();
  }
  static const char* value(const ::my_service::WheelResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // MY_SERVICE_MESSAGE_WHEEL_H
